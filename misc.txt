# @bot.message_handler(commands=['exchange'])
# def choose_base_for_exchange(message):
#     bases = ['Petrykivka', 'Peremoga']
#     markup = tb.types.ReplyKeyboardMarkup()
#     for command in bases:
#         markup.add(tb.types.KeyboardButton(command))
#     bot.send_message(message.chat.id, "Choose a base:", reply_markup=markup)
#     bot.register_next_step_handler(message, exchange)
#
#
# def exchange(message):
#     bot.send_message(message.chat.id, "Exchange run, wait for complete...", reply_markup=tb.types.ReplyKeyboardRemove())
#     result = e.exchangeRun(message.text)
#     bot.send_message(message.chat.id, result)
#
#
# @bot.message_handler(commands=['getusererp'])
# def getUserERP(message):
#     user_adin_s = connect.get_people_by_telegram_id(message.chat.id)
#     bot.send_message(message.chat.id, f'You are {user_adin_s}')

@bot.message_handler(commands=['show_yurec'])
def show_yurec(message):
    with open('yurec.jpg', 'rb') as ph:
        bot.send_photo(message.chat.id, ph)


@bot.message_handler(commands=['show_dick'])
def show_dick(message):
    with open('dick.jpg', 'rb') as ph:
        bot.send_photo(message.chat.id, ph)


:param User_ID: user ID
:param TelegramMessageID: telegram ID of new message
:param MessageData: data (text, media etc.) of new message; for media - ID from Telegram
:param Appeal_ID: ID of appeal based on current message